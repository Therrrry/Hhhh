import can
import time

def check_ecu_connection():
    """
    Checks if the ECU is connected by sending a test message and waiting for a response.
    """
    # User configuration
    channel = 0  # CANalyzer channel (adjust based on your setup)
    bitrate = 500000  # CAN bus bitrate
    app_name = "CANalyzer"  # Vector application name
    tx_id = 0x18DA03FA  # Transmit arbitration ID
    test_data = [0x02, 0x10, 0x01]  # Test data to send

    try:
        # Configure the CAN bus using Vector API
        bus = can.interface.Bus(
            bustype="vector",
            channel=channel,
            bitrate=bitrate,
            app_name=app_name
        )
        print(f"Connected to CANalyzer on channel {channel} with bitrate {bitrate}.")

        # Create the test message
        msg = can.Message(
            arbitration_id=tx_id,
            data=test_data,
            is_extended_id=True
        )

        # Send the test message
        try:
            bus.send(msg)
            print(f"Sent test message: ID={hex(tx_id)}, Data={test_data}")
        except can.CanError as e:
            print(f"Error while sending test message: {e}")
            return False

        # Wait for a response
        print("Waiting for a response from the ECU...")
        response = bus.recv(timeout=5.0)  # Wait for up to 5 seconds

        # Check if a response was received
        if response:
            received_id = hex(response.arbitration_id)
            received_data = list(response.data)
            print(f"Response received: ID={received_id}, Data={received_data}")
            print("ECU is connected and responding.")
            return True
        else:
            print("No response received. ECU might not be connected or responding.")
            return False

    except Exception as e:
        print(f"Error: {e}")
        return False
    finally:
        # Clean up the bus connection
        if 'bus' in locals():
            bus.shutdown()
            print("Bus connection closed.")

if __name__ == "__main__":
    ecu_connected = check_ecu_connection()
    if ecu_connected:
        print("ECU check: Connected")
    else:
        print("ECU check: Not Connected")
