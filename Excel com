def compare_files(self):
    try:
        if not all([
            self.file1_path.get(), self.file2_path.get(),
            self.sheet1_name.get(), self.sheet2_name.get(),
            self.column1_name.get(), self.column2_name.get()
        ]):
            raise ValueError("All selections must be made before comparison.")

        # Read Excel sheets
        df1 = pd.read_excel(self.file1_path.get(), sheet_name=self.sheet1_name.get())
        df2 = pd.read_excel(self.file2_path.get(), sheet_name=self.sheet2_name.get())

        # Ensure both dataframes have comparable lengths
        min_len = min(len(df1), len(df2))
        df1 = df1.iloc[:min_len].reset_index(drop=True)
        df2 = df2.iloc[:min_len].reset_index(drop=True)

        # Check conditions:
        # - Excel1 column cell: has any value (not null or empty string after strip)
        # - Excel2 column cell: should be empty or NaN
        excel1_col_values = df1[self.column1_name.get()]
        excel2_col_values = df2[self.column2_name.get()]

        condition = excel1_col_values.apply(lambda x: str(x).strip() != "") & excel2_col_values.isna()

        filtered_rows = df1[condition]

        if filtered_rows.empty:
            messagebox.showinfo("Result", "No matching rows found based on the given condition.")
            return

        # Save output
        output_file = os.path.join(os.path.dirname(self.file1_path.get()), "comparison_output_final.xlsx")
        filtered_rows.to_excel(output_file, index=False)
        messagebox.showinfo("Success", f"Operation completed!\nOutput saved at:\n{output_file}")

    except Exception as e:
        messagebox.showerror("Error", f"Comparison failed: {e}")
