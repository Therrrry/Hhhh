import pandas as pd
import re
import os

# --- USER CONFIG ---
file_path = r"D:\hkiu\hjk"
sheet_name = "Sheet0"
output_file = r"D:\hkiu\final_output.xlsx"

# --- Helper function ---
def extract_numbers(cell_value):
    if pd.isnull(cell_value):
        return []
    return [val.strip() for val in str(cell_value).split(',') if val.strip()]

# --- Validate file ---
if not os.path.exists(file_path):
    raise FileNotFoundError(f"File not found at: {file_path}")

# --- Read Excel without header ---
df = pd.read_excel(file_path, sheet_name=sheet_name, header=None)

# --- Defensive check: minimum required columns ---
required_columns = [3, 6]
max_required_col = max(required_columns)

if df.shape[1] <= max_required_col:
    raise ValueError(f"Input Excel has only {df.shape[1]} columns. "
                     f"Expected at least {max_required_col + 1} columns (0-based index).")

mapping_dict = {}

# --- Process row by row ---
for idx, row in df.iterrows():
    # Defensive checks: 
    if len(row) <= max_required_col:
        print(f"Warning: Row {idx+1} has fewer columns than expected. Skipping row.")
        continue
    
    numbers_in_row = extract_numbers(row[6])  # column index 6
    map_value = str(row[3]).strip()           # column index 3
    
    for num in numbers_in_row:
        if num not in mapping_dict:
            mapping_dict[num] = []
        mapping_dict[num].append(map_value)

# --- Clean duplicates and sort mapped values ---
for num, val_list in mapping_dict.items():
    mapping_dict[num] = sorted(set(val_list))

# --- Prepare final output DataFrame ---
output_data = []
for number, mapped_vals in mapping_dict.items():
    output_data.append({
        "Number": number,
        "Mapped_Values": ', '.join(mapped_vals)
    })

output_df = pd.DataFrame(output_data)

# Sort the output by number (if numbers are numeric)
try:
    output_df['Number'] = output_df['Number'].astype(float)
    output_df = output_df.sort_values(by="Number")
except:
    # If not convertible to float, keep as string sorted
    output_df = output_df.sort_values(by="Number")

# --- Save output Excel ---
output_df.to_excel(output_file, index=False)

# --- Print Summary ---
print(f"\n=== Process Completed ===")
print(f"Unique numbers found: {len(output_df)}")
print(f"Output saved at: {output_file}")
